/* General Body Styles (assumed from context, add if you don't have them) */
body, html {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

.home-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center; 
  padding: 2rem; /* Default padding for desktop */
  min-height: 100vh;
  box-sizing: border-box;
  overflow: hidden;
}

.profile-card {
  position: relative;
  display: flex;
  align-items: center;
  max-width: 800px;
  width: 100%;
  background: hsl(216deg 8.2% 11.96%);
  border-radius: 16px;
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  z-index: 1;
  padding: 3rem 4rem;
  transition: all 0.3s ease-out;
}
/* Wrapper for all text elements */
.text-content {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  max-width: 450px;
}


/* Typography (largely unchanged) */
.text-content h1 {
  font-size: 2.8rem;
  font-weight: 700;
  margin: 0;
  line-height: 1.2;
  color: #f0f0f0;
  text-shadow: 0 2px 10px rgba(0,0,0,0.2);
}

.text-content h2 {
  font-size: 1.25rem;
  font-weight: 500;
  color: #5792bb;
  margin: 0;
  letter-spacing: 1px;
}

.text-content p.desc {
  font-size: 1.1rem;
  color: #c0c0c0;
  line-height: 1.6;
  margin: 0;
}

.text-content p.desc span {
    color: #f0f0f0;
}

/* Buttons (unchanged) */
.buttons {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

.buttons button {
  padding: 12px 24px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  background-color: rgba(22, 22, 34, 0.6);
  color: #f0f0f0;
  transition: all 0.2s ease-in-out;
  backdrop-filter: blur(5px);
}

.buttons button:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

/* Update this existing rule */
.profile-image-container {
  position: absolute;
  top: 36%;
  right: -24px;
  --final-transform: translateY(-50%);
  transform: var(--final-transform);
  width: 400px;
  height: 400px;
  z-index: 2;
}

.animated-glow {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  opacity: 0.6;
  filter: blur(48px);
  animation: pulse 5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.profile-picture {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  object-fit: cover;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 0.6; }
  50% { transform: scale(1.05); opacity: 0.4; }
}

@media (max-width: 1024px) {
  .profile-card {
    flex-direction: column;
    padding: 2rem;
    padding-top: 140px;
    margin-top: 140px;
    max-width: 500px; /* This is good for tablets */
  }

  .text-content {
    align-items: center;
    text-align: center;
    max-width: 100%;
  }

  .profile-image-container {
    top: 0;
    left: 50%;
    right: auto;
    --final-transform: translate(-50%, -50%);
    transform: var(--final-transform);
    width: 280px;
    height: 280px;
  }

  .buttons {
    justify-content: center;
  }
}


@media (max-width: 768px) {
  .profile-card {
    margin-top: 120px;
    padding-top: 120px;
    
    /* THE FIX: Set a percentage width and override the max-width */
    width: 90%;
    max-width: none; /* This removes the 500px limit from the tablet style */
  }

  .profile-image-container {
    width: 240px;
    height: 240px;
  }

  .text-content h1 {
    font-size: 2.2rem;
  }

  .text-content h2 {
    font-size: 1.1rem;
  }

  .buttons {
    flex-direction: column;
    width: 100%;
  }

  .buttons a, .buttons button {
    width: 100%;
  }
}
/* New animation specifically for the profile image */
@keyframes fadeInUpImage {
  from {
    opacity: 0;
    /* Starts 20px lower than its final centered position */
    transform: translateY(-50%) translateY(20px); 
  }
  to {
    opacity: 1;
    /* Ends perfectly centered */
    transform: translateY(-50%);
  }
}
/* === Fade-In Animation on Load (Fully Responsive) === */

/* Prepare all elements for animation */
.profile-card,
.profile-image-container,
.text-content > h1,
.text-content > h2,
.text-content > p,
.buttons {
  opacity: 0; 
  animation-fill-mode: forwards;
  animation-duration: 0.8s;
  animation-timing-function: ease-out;
}

/* Apply the GENERIC animation */
.profile-card,
.text-content > h1,
.text-content > h2,
.text-content > p,
.buttons {
  animation-name: fadeInUp; 
}

/* Apply the SMART animation to the image */
.profile-image-container {
  animation-name: fadeInUpWithTransform; /* Use the new variable-based animation */
}

/* Stagger the start times (no changes here) */
.profile-card {
  animation-delay: 1s;
}
.profile-image-container {
  animation-delay: 1.2s;
}
.text-content > h1 {
  animation-delay: 1.4s;
}
.text-content > h2 {
  animation-delay: 1.6s;
}
.text-content > p.desc {
  animation-delay: 1.8s;
}
.buttons {
  animation-delay: 2s;
}

/* --- Don't forget to keep your original fadeInUp animation for the other elements --- */
/* A single, flexible animation for the image container */
@keyframes fadeInUpWithTransform {
  from {
    opacity: 0;
    /* It reads the variable and adds the slide-up effect */
    transform: var(--final-transform) translateY(20px);
  }
  to {
    opacity: 1;
    /* It settles at the correct position defined by the variable */
    transform: var(--final-transform);
  }
}

/* The simple animation for everything else (no change here) */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}